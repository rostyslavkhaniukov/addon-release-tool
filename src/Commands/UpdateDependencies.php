<?php

declare(strict_types=1);

namespace AirSlate\Releaser\Commands;

use AirSlate\Releaser\Builder;
use AirSlate\Releaser\Docker\DockerContainer;
use AirSlate\Releaser\Processors\ComposerProcessor;
use Symfony\Component\Console\Helper\Table;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class UpdateDependencies extends AddonsCommand
{
    /**
     * @return void
     */
    protected function configure(): void
    {
        $this
            ->setName('deps:update')
            ->setDescription('Update dependencies');
            //->addArgument('package', InputArgument::REQUIRED, 'Package for check.')
            //->addArgument('version', InputArgument::REQUIRED, 'Version for check.');
    }

    protected function beforeCommand(InputInterface $input, OutputInterface $output)
    {
        parent::beforeCommand($input, $output);

        $output->writeln('<info>Update addon dependency.</info>');
    }

    /**
     * @param string $addon
     * @param InputInterface $input
     * @param OutputInterface $output
     * @throws \ReflectionException
     */
    protected function step(string $addon, InputInterface $input, OutputInterface $output)
    {
        $output->writeln('Started ' . $addon);
        (new Builder($this->client, $addon))
            ->setOutput($output)
            ->forTask('AAD-1232')
            ->from('develop')
            ->step(function (ComposerProcessor $schema) use ($input, $output, $addon) {
                return $schema->ensure('airslate/laravel-prometheus-exporter', '^3.1');
            })
            ->branch('add-code-coverage-metrics')
            ->commit('Add code coverage metrics')
            ->push()
            ->makePR('Add code coverage metrics', 'Autogenerated PR');
        $output->writeln('Finished ' . $addon);
    }
}
