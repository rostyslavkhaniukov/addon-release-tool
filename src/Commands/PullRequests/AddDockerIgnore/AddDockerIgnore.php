<?php

declare(strict_types=1);

namespace AirSlate\Releaser\Commands\PullRequests\AddDockerIgnore;

use AirSlate\Releaser\Builder;
use AirSlate\Releaser\Commands\AddonsCommand;
use AirSlate\Releaser\Exceptions\FileNotFoundInRepositoryException;
use AirSlate\Releaser\Processors\FileProcessor;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Fluffy\GithubClient\Client as GithubClient;

class AddDockerIgnore extends AddonsCommand
{
    /**
     * @return void
     */
    protected function configure(): void
    {
        $this
            ->setName('pr:dockerignore')
            ->setDescription('Add Dockerignore to addon');
    }

    /**
     * @param InputInterface $input
     * @param OutputInterface $output
     * @return void
     */
    protected function step(string $addon, InputInterface $input, OutputInterface $output): void
    {
        (new Builder($this->client, $addon))
            ->setOutput($output)
            ->forTask('Dockerignore')
            ->from('develop')
            ->step(function (FileProcessor $circleci) use ($output, $addon) {
                try {
                    $result = $circleci
                        ->createFromFile('.dockerignore', __DIR__ . '/.dockerignore');

                    $output->writeln("<comment>Updating ${addon}...</comment>");
                    return $result;
                } catch (FileNotFoundInRepositoryException $e) {
                    $output->writeln("<comment>File not exists in ${addon}. Creating...</comment>");
                }
            })
            ->branch('add-dockerignore')
            ->commit('Add dockerignore')
            ->push()
            ->makePR('Add dockerignore', 'Autogenerated PR');
    }
}
